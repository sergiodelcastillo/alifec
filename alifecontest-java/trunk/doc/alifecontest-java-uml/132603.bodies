class BattleManager
!!!150523.java!!!	BattleManager(in path : String, in mode : int)
		this.PATH  = path;
      this.mode = mode;
		if(mode == Contest.COMPETITION_MODE){
      	File f = new File(path + File.separator + BATTLES_FILE);
      	if(!f.exists())  f.createNewFile();
      }
!!!150651.java!!!	add(in n1 : String, in n2 : String, in nut : String, in ene1 : float, in ene2 : float) : void
        Battle b = new Battle(n1, n2, nut, ene1, ene2);

        if(mode == Contest.COMPETITION_MODE)
           b.save(getBattlesFileName());

        battles.addElement(b);
!!!150779.java!!!	setMode(in mode : int) : void
		  this.mode = mode;
!!!150907.java!!!	add(in line : String) : void
        Battle b = new Battle(line);
        
        if(mode == Contest.COMPETITION_MODE)
           b.save(getBattlesFileName());

        battles.addElement(b);
!!!151035.java!!!	delete(in name : String) : void
       for(Battle b: battles){
          if(b.contain(name))
             battles.remove(b);
       }
!!!151163.java!!!	penalice(in name : String) : boolean
		boolean ret = true;
		try{
			for(Battle b: battles){	
				if(b.contain(name)){
					if(!b.delete(getBattlesFileName()))
						ret = false;
					battles.remove(b);
				}
			}
		} catch(java.io.FileNotFoundException ex){
			System.out.println("BattleManager.penalice()--> FIleNotFoundException");
			return false;
		} catch(java.io.IOException ex){
			System.out.println("BattleManager.penalice()--> IOException");
			return false;
		}

		return ret;
!!!151291.java!!!	getResults() : Hashtable<String, Float>
        Hashtable<String, Float> results = new Hashtable<String, Float>();

        for(Battle b: battles){
            if(results.containsKey(b.getWinnerName())){
                Float f = results.remove(b.getWinnerName());
                results.put(b.getWinnerName(), f+ b.getWinnerEnergy());
            } else {
                results.put(b.getWinnerName(), b.getWinnerEnergy());
            }
        }
        return results;
!!!151419.java!!!	getBattlesFileName() : String
        return this.PATH + File.separator + BattleManager.BATTLES_FILE;
!!!151547.java!!!	getMaxEnergy() : Float
        try {
           return Collections.max(getResults().values());
        } catch (java.util.NoSuchElementException ex){
           return new Float(0);
        }
!!!151675.java!!!	read() : void
        String path = getBattlesFileName();

        FileReader fr = new FileReader(path);
        BufferedReader br = new BufferedReader(fr);
        String line = "";

        while (line != null){
            try {
                line = br.readLine();
                battles.addElement(new Battle(line));
            } catch (IllegalArgumentException ex){}
        }
!!!151803.java!!!	save() : boolean
		  try {
				for (Battle b : battles) {
					 b.save(getBattlesFileName());
				}
		  } catch (FileNotFoundException ex) {
				Logger.getLogger(BattleManager.class.getName()).log(Level.SEVERE, null, ex);
				return false;
		  } catch (IOException ex) {
				Logger.getLogger(BattleManager.class.getName()).log(Level.SEVERE, null, ex);
				return false;
		  }
		  return true;
!!!151931.java!!!	getNames() : Vector<String >
        Vector<String> names = new Vector<String>();

        for(Battle b : battles){
            if(!names.contains(b.getName_1()))
                names.addElement(b.getName_1());
            if(!names.contains(b.getName_2()))
                names.addElement(b.getName_2());
        }
        return names;
!!!152059.java!!!	getBattlesWin(in name : String) : int
       int count = 0;

       for(Battle b:battles){
          if(b.getWinnerName().equals(name))
             ++count;
       }
       return count;
!!!152187.java!!!	contain(inout br : BattleRun) : boolean
       for(Battle b: this.battles){
          if(b.getNutrient().equalsIgnoreCase(br.nutrient)     &&
             (   (b.getName_1().equalsIgnoreCase(br.name1) &&
                  b.getName_2().equalsIgnoreCase(br.name2))    ||
                 (b.getName_1().equalsIgnoreCase(br.name2) &&
                 b.getName_2().equalsIgnoreCase(br.name1)) ))
             return true;
       }
       return false;
!!!152315.java!!!	getPath() : String
		return PATH;
