class TournamentManager
!!!177275.java!!!	TournamentManager(in p : String, in m : int)
		PATH = p;
		mode = m;
		
		String[] tournamentName = new File(PATH).list(new TournamentFilter());

      if(tournamentName != null){
         for(String name: tournamentName){
            Tournament t = new Tournament(name, PATH, mode);
            if(t.read())
               tournaments.addElement(t);
         }
      }

		//creating a  new Tournament!.
		Collections.sort(tournaments);
		
		/*String newT = getNextName();
		
		if(mode == Contest.COMPETITION_MODE){
        if(!new File(PATH+File.separator+newT).mkdir())
            throw new CreateTournamentException("Can't create a new folder...");
      }
			
		Tournament t = new Tournament(newT, PATH, mode);
	
		tournaments.addElement(t);*/
		selected = tournaments.size()-1;
//		selected = -1;
!!!177403.java!!!	getRanking() : Hashtable<String, Integer>
      Hashtable<String, Integer> ranking = new Hashtable<String, Integer>();

      for(Tournament t: tournaments){
         Hashtable<String, Integer> tRanking = t.getRanking();
         
         for(Iterator<String> i = tRanking.keySet().iterator();i.hasNext();){
            String name = i.next();
            Integer point = ranking.containsKey(name)? ranking.remove(name):new Integer(0);
            ranking.put(name, point+tRanking.get(name));            
         }
      }
      return ranking;
!!!177531.java!!!	getNextName() : String
	
			if(tournaments.size() > 0){
				String NAME = tournaments.lastElement().NAME;
			
				Integer i = (new Integer(NAME.split("-")[1])+1);
		  
				return "Tournament-" + ((i < 10) ? ("0"+i): i);
			}else 
				return  "Tournament-01";
!!!177659.java!!!	newTournament(inout colonies : Vector<String>) : void
      String newT = getNextName();
		
		if(mode == Contest.COMPETITION_MODE){
         if(!new File(PATH+File.separator+newT).mkdir())
            throw new CreateTournamentException("Can not create a new folder...");
      }
		
		try {
			Tournament t = new Tournament(newT, PATH, mode);

			for(String c: colonies){
				t.addColony(c);
			}
		
			tournaments.addElement(t);
			selected = tournaments.indexOf(t);
		} catch(IOException ex){
			throw new CreateTournamentException("Cannot load the tournament...");
		}
!!!177787.java!!!	removeSelected() : boolean
  			
			Tournament t = getSelected();
			String url = PATH+File.separator+t.NAME;
         
			if(t != null){
				File file = new File(t.getBattleManager().getBattlesFileName());
            if(file.exists() && !file.delete())
            	if(mode == Contest.COMPETITION_MODE) return false;
            	
				file = new File(url);
				if(file.exists() && !file.delete()) 
            	if(mode == Contest.COMPETITION_MODE) return false;
			}
			
			tournaments.remove(selected);
			
			if(selected >= tournaments.size())
				selected = tournaments.size()-1;
				
			return true || mode == Contest.PROGRAMMER_MODE;
!!!177915.java!!!	getSelected() : Tournament
		 try{
			return tournaments.elementAt(selected);
		 } catch (Exception ex){
			 System.out.println("error:tournamentManager.getSelected()");
		 }
		 return null;
!!!178043.java!!!	getSelectedID() : int
		return selected;
!!!178171.java!!!	lastElement() : Tournament
	 	 if(tournaments.size() == 0) 
	 	 	return null;
	 	 	
		 return tournaments.lastElement();
!!!178299.java!!!	getTournament(in i : int) : Tournament
		return tournaments.elementAt(i);
!!!178427.java!!!	size() : int
      return tournaments.size();
!!!178555.java!!!	next() : Tournament
      if(selected < tournaments.size()-1 )
         selected++;
      
		return tournaments.elementAt(selected);
!!!178683.java!!!	prev() : Tournament
		 if(selected >0 )
			 selected--;
		
		 return tournaments.elementAt(selected);
!!!178811.java!!!	getNames() : Vector<String>
      Vector <String> names = new Vector <String>();

      for(Tournament t: this.tournaments){
        Vector<String> namesOfT = t.getNames();

        for(String name: namesOfT)
            if(!names.contains(name))
                names.addElement(name);
      }  
      return names;
!!!178939.java!!!	setMode(in mode : int) : void
		 if(this.mode == Contest.PROGRAMMER_MODE &&
			  mode == Contest.COMPETITION_MODE){
			  lastElement().getBattleManager().setMode(mode);
			  lastElement().save(PATH);
		 }
		 this.mode = mode;
