class DeleteColony
!!!174459.java!!!	DeleteColony(inout f : ContestUI)
		super(f,"Delete Colony", true);
		
		father = f;
      this.addEscapeKey();
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setMinimumSize(new Dimension(300, 350));
		this.setLayout(new BorderLayout());
		this.getContentPane().add(BorderLayout.CENTER, createCenterPanel());
		this.getContentPane().add(BorderLayout.SOUTH, createSouthPanel());

		Point p = f.getLocation();
		p.y += (f.getHeight() -getHeight())/2;
		p.x += (f.getWidth()-getWidth())/2;
		
		colonies = father.getContest().getEnvironment().getOps();
		this.setLocation(p);
		this.repaint();
!!!174587.java!!!	createCenterPanel() : JPanel
		JPanel p = new JPanel(new BorderLayout());
		p.setBorder(BorderFactory.createTitledBorder("Select a Colony to Delete "));
		list = new JList(father.getContest().getEnvironment().getNames());
		JScrollPane sp = new JScrollPane(list);
		p.add(BorderLayout.CENTER, sp);	
		
		ButtonGroup group = new ButtonGroup();
		
		dOfTournament.setSelected(true);
		group.add(dOfContest);
		group.add(dOfTournament);
		
		JPanel temp= new JPanel(new GridLayout(2, 1));
		temp.setBorder(BorderFactory.createTitledBorder("Options "));
		temp.add(dOfTournament);
		temp.add(dOfContest);
		p.add(BorderLayout.SOUTH, temp);	
		return p;
!!!174715.java!!!	createSouthPanel() : JPanel
		JPanel p = new JPanel(new FlowLayout());
		JButton cancel = new JButton("Close") ;
		JButton delete = new JButton("Delete") ;
		
		cancel.setToolTipText("Close");
		delete.setToolTipText("Delete.");
		
		cancel.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent arg0) {
						dispose();
		}});
		delete.addActionListener(new ActionListener() {
					@Override
					public void actionPerformed(ActionEvent arg0) {
						try {
							if(dOfTournament.isSelected() && list.getModel().getSize() > 0){
								System.out.println("mallll");
								
								String colonyName = (String)list.getSelectedValue();
								System.out.println("Colony: " + colonyName);
								father.getBattleUI().delete(colonyName);  // ver!!
								father.getTournamentUI().delete(colonyName);

								father.getContest().getEnvironment().delete(colonyName);

//								father.getContest().getTournamentManager().lastElement().del(c.getName());
	//							father.getTournamentUI().updateLast();
								System.out.println("Ver");
								list.updateUI(); // ver!!
								//father.repaint();
							} else if(dOfContest.isSelected()){
								System.out.println("delete of contest.");

							}
						} catch (ArrayIndexOutOfBoundsException ex){
							
						} catch (NullPointerException ex){
							ex.printStackTrace();
						}
		}});

		p.add(delete);
		p.add(cancel);
		return p;
!!!174843.java!!!	addEscapeKey() : void
      // Handle escape key to close the dialog
      KeyStroke escape = KeyStroke.getKeyStroke (KeyEvent.VK_ESCAPE, 0, false);
      
      AbstractAction escapeAction = new AbstractAction() {
	      private static final long serialVersionUID = 6L;
         public void actionPerformed(ActionEvent e) {
            dispose();
         }
      };

      getRootPane ().getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW).put (escape, "ESCAPE");
      getRootPane ().getActionMap ().put ("ESCAPE", escapeAction);
