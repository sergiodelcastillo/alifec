class CodeGenerator
!!!156923.java!!!	generateExamples(in path : String) : boolean
      return generateRandomColonyJava(path)   &&
             generateMovxColonyJava(path)     &&
             generateTactica1ColonyJava(path) &&
             generateTactica2ColonyJava(path) &&
             generateMovxColonyCpp(path);
!!!157051.java!!!	save(in path : String, in sourceCode : String) : boolean
      try {
         System.out.println("path: " +path);
         FileWriter fw = new FileWriter(path);
         PrintWriter pw = new PrintWriter(fw);

         for(String line: sourceCode)
            pw.println(line);
            System.out.println("dada");
         pw.close();
      } catch (IOException ex){
         return false;
      }
      return true;
!!!157179.java!!!	generateRandomColonyJava(in url : String) : boolean
      String [] sourceCode = {
            "// =======================================================",
            "// Generated by alifecontest-java application.",
            "//   @author Sergio",
            "//   @e-mail:sergiodelcastillo@ymail.com",
            "// =======================================================",
            "package lib.MOs;",
            "",
            "import lib.Microorganism;",
            "import lib.Movement;",
            "",
            "public class RandomColony extends Microorganism{",
            "",
            "    public void move(Movement mov) {",
            "       // you should do this source code to not throw exceptions ;)",
            "       try {",
            "         myStrategy(mov);",
            "       } catch(Exception ex){",
            "          System.out.println(\":(\");",
            "          ex.printStackTrace();",
            "          mov.dx = 0;",
            "          mov.dy = 0;",
            "       }",
            "    }",
            "",
            "    public boolean mitosis() {",
            "       try {",
            "         return false;",
            "       } catch(Exception ex){",
            "          System.out.println(\":(\");",
            "          ex.printStackTrace();",
            "          return false;",
            "       }",
            "    }",
            "",
            "    public String getName() {",
            "        return \"Random_java\";",
            "    }",
            "",
            "    public String getAuthor() {",
            "        return \"Author\";",
            "    }",
            "",
            "	public String getAffiliation() {",
            "		return \"UTN-FRSF\";",
            "	}",
            "",
            "   private void myStrategy(Movement mov) {",
            "        mov.dx = new java.util.Random().nextInt(3)-1;",
            "		  mov.dy = new java.util.Random().nextInt(3)-1;",
            "   }",
            "}" };
      return save(url + File.separator + "RandomColony.java", sourceCode);
!!!157307.java!!!	generateMovxColonyJava(in url : String) : boolean
      String [] sourceCode  =
         {  "// =======================================================",
            "// Generated by alifecontest-java application.",
            "//   @author Sergio",
            "//   @e-mail:sergiodelcastillo@ymail.com",
            "// =======================================================", "",
            "package lib.MOs;",
            "",
            "import lib.Microorganism;",
            "import lib.Movement;", "",
            "public class Movx extends Microorganism{", "",
            "     // relative movement.",
            "     public void move(Movement mov){",
            "		mov.dx = new java.util.Random().nextInt(3)-1;",
            "      mov.dy = 0;",
            "    }", "",
            "    public boolean mitosis() {",
            "       //never is duplicated",
            "        return false;",
            "    }", "",
            "    public String getName() {",
            "      return \"MovX_java\";",
            "   }", "",
            "    public String getAuthor() {",
            "        return \"Author\";",
            "    }", "",
            "	public String getAffiliation() {",
            "		return \"UTN-FRSF\";",
            "	}", "}"};
   
         return save(url+ File.separator+"Movx.java", sourceCode);
!!!157435.java!!!	generateTactica1ColonyJava(in url : String) : boolean
      String [] sourceCode = {
            "// =======================================================",
            "// Generated by alifecontest-java application.",
            "//   @author Sergio",
            "//   @e-mail:sergiodelcastillo@ymail.com",
            "// =======================================================", "",
            "package lib.MOs;", "",
            "import java.awt.Point;",
            "import lib.Defs;",
            "import lib.Microorganism;",
            "import lib.Petri;",
            "import lib.Movement;", "",
            "public class Tactica1 extends Microorganism{",
            "   Petri petri = Petri.getInstance();", "",
            "   public void move(Movement mov) {",
            "      mov.dx = mov.dy = 0;",
            "",
            "      //if I can attack you --> I kill you :o",
            "      for(int i = -1; i <= 1; i++){",
            "         for(int j = -1; j <= 1; j++){",
            "            Point p = new Point(pos.x+i, pos.y+j);",
            "",
            "            if(petri.inDish(p) &&",
            "               petri.canCompite(pos, p) &&",
            "               ene > petri.getEnergy(p.x, p.y)){",
            "               mov.dx = i;",
            "               mov.dy = j;",
            "               return;",
            "            }",
            "         }",
            "      }",
            "      // if I can't attack -->   Seek the maximun of Relative Nutrient!!",
            "      for(int i = -1; i <= 1; i++){",
            "        for(int j = -1; j <= 1; j++){",
            "           Point current = new Point (pos.x+i, pos.y+j);",
            "           Point best = new Point(pos.x+mov.dx,pos.y+mov.dy);",
            "",
            "           if(petri.inDish(current) &&",
            "              petri.getNutrient(best.x, best.y) < petri.getNutrient(current.x, current.y)){",
            "               mov.dx = i;",
            "               mov.dy = j;",
            "           }",
            "         }",
            "      }",
            "   }", "",
            "   public boolean mitosis() {",
            "      return (this.ene > Defs.E_INITIAL*2);",
            "   }", "",
            "   public String getName() {",
            "      return \"Tactica1_java\";",
            "   }", "",
            "   public String getAuthor() {",
            "      return \"Tactica1\";",
            "   }","",
            "	public String getAffiliation() {",
            "		return \"UTN-FRSF\";",
            "	}", "}"};
      return  save(url+ File.separator+"Tactica1.java", sourceCode);
!!!157563.java!!!	generateTactica2ColonyJava(in url : String) : boolean
      String [] sourceCode = {
            "// =======================================================",
            "// Generated by alifecontest-java application.",
            "//   @author Sergio",
            "//   @e-mail:sergiodelcastillo@ymail.com",
            "// =======================================================","",
            "package lib.MOs;","",
            "import java.awt.Point;",
            "import lib.Defs;",
            "import lib.Microorganism;",
            "import lib.Movement;",
            "import lib.Petri;","",
            "public class Tactica2 extends Microorganism{","",
            "    public void move(Movement mov) {",
            "        Point p = new Point();",
            "        for(int i = -1; i <= 1; i++){",
            "           for(int j = -1; j <= 1; j++){",
            "              try{",
            "                  p.x = pos.x+i;",
            "                  p.y = pos.y+j;",
            "                 if(Petri.getInstance().inDish(p) &&",
            "                    Petri.getInstance().canCompite(pos, p)){",
            "                     if(Petri.getInstance().getEnergy(p.x, p.y) < ene-Defs.LESS_MOVE){",
            "                        mov.dx = i;",
            "                        mov.dy = j;",
            "                        return;",
            "                     }",
            "                 }",
            "              } catch(NullPointerException ex){ }",
            "           }",
            "       }",
            "       for(int i = -1; i <= 1; i++){",
            "         for(int j = -1; j <= 1; j++){",
            "           try{",
            "               p.x = pos.x+i;",
            "               p.y = pos.y+j;",
            "               if(Petri.getInstance().inDish(p)){",
            "                  // I like 1.4  --> you can change it!",
            "                 if(Petri.getInstance().getNutrient(pos.x, pos.y)*1.4 <",
            "                    Petri.getInstance().getNutrient(p.x,p.y)){  ",
            "                     mov.dx = i;",
            "                      mov.dy = j;",
            "                      return;",
            "                   }",
            "                 }",
            "              } catch(NullPointerException ex){}",
            "           }",
            "       }",
            "    }", "",
            "    public boolean mitosis() {",
            "      return false;",
            "    }", "",
            "    public String getName() {",
            "        return \"Tactica2_java\";",
            "    }", "",
            "    public String getAuthor() {",
            "        return \"Tactica2\";",
            "    }", "",
            "	  public String getAffiliation() {",
            "		   return \"UTN-FRSF\";",
            "	  }", "}"};
      return save(url + File.separator + "Tactica2.java", sourceCode);
!!!157691.java!!!	generateJYeyoColonyJava(in url : String) : boolean
      System.out.println("Yeyo atorrante hace un ejemplo mas completito!!!");
      return false;
!!!157819.java!!!	generateMovxColonyCpp(in url : String) : boolean
         String [] sourceCode = {
				"// =======================================================",
				"// Generated by alifecontest-java application.",
				"//   @author Sergio",
				"//   @e-mail:sergiodelcastillo@ymail.com",
				"// =======================================================",
				"",
				"#ifndef MOVX_H",
				"#define MOVX_H",
				"",
				"#include<cstdlib>",
				"#include <iostream>",
				"using namespace std;",
				"",
				"#include \"Microorganism.h\"",
				"#include \"Petri.h\"",
				"",
				"class Movx: public Microorganism{",
				"	public:",
				"		Movx(){",
				"			srand(time(NULL));",
				"		}",
				"		void move(Movement &mov) {",
				"			mov.dx = (rand() % 3) -1;",
				"			mov.dy = 0;",
				"		};",
				"",		
				"		bool mitosis(){",
				"			return false;",
				"		};",
				"",		
				"		string getName(){",
				"			return \"Movx_cpp\";",
				"		};",
				"",		
				"		string getAuthor(){",
				"			return \"Author\";",
				"		};",
				"",
				"		string getAffiliation(){",
				"			return \"UTN-FRSF\";",
				"		};",
				"};",
				"",
				"#endif",
				""
			};
            
      return save(url + File.separator + "movx.h", sourceCode);
