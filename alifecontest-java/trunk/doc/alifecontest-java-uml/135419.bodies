class DialogNewContest
!!!166011.java!!!	DialogNewContest(inout father : JFrame, in url : Vector<Object>)
		super(father, "New Contest ", true);
      this.result = url;

      initComponents();

      this.textName.setText("01");
      if(father != null)
      this.setLocation(father.getX()+(father.getWidth()-getWidth())/2,
                       father.getY()+(father.getHeight()-getHeight())/2);
      this.setResizable(false);
      this.setVisible(true);
!!!166139.java!!!	exists(in name : String) : boolean
      return new File(textPath.getText()+ File.separator+ "Contest_"+name).exists();
!!!166267.java!!!	initComponents() : void
      buttonOK.addActionListener(this);
      buttonCancel.addActionListener(this);
      buttonBrowse.addActionListener(this);
      textName.addKeyListener(this);
      addEscapeKey();
      
      textContest.setEditable(false);
      textPath.setEditable(false);

      centerLayout = new GroupLayout(centerPanel);
      centerPanel.setLayout(centerLayout);
      centerLayout.setAutoCreateContainerGaps(true);
      centerLayout.setAutoCreateGaps(true);

      getContentPane().setLayout(new BorderLayout());
      getContentPane().add(BorderLayout.CENTER, centerPanel);
      getContentPane().add(BorderLayout.SOUTH, southPanel);

      southLayout = new GroupLayout(southPanel);
      southPanel.setLayout(new FlowLayout());
      southLayout.setAutoCreateContainerGaps(true);
      southLayout.setAutoCreateGaps(true);
      southPanel.add(this.buttonOK);
      southPanel.add(this.buttonCancel);

      centerLayout.setHorizontalGroup(
               centerLayout.createSequentialGroup().
                  addGroup(centerLayout.createParallelGroup().
                     addComponent(labelName).
                     addComponent(labelPath).
                     addComponent(checkLoad)).
                  addGroup(centerLayout.createParallelGroup().
                     addGroup(centerLayout.createSequentialGroup().
                        addComponent(textContest).addComponent(textName).addComponent(labelAccepted)).
                     addGroup(centerLayout.createSequentialGroup().
                        addComponent(textPath).addComponent(buttonBrowse)).
                     addGroup(centerLayout.createSequentialGroup().
                        addComponent(examples)))
                        
                 );

      centerLayout.setVerticalGroup(
            centerLayout.createSequentialGroup().
               addGroup(centerLayout.createParallelGroup().
                  addComponent(labelName).
                  addComponent(textContest).
                  addComponent(textName).
                  addComponent(labelAccepted)).
               addGroup(centerLayout.createParallelGroup().
                  addComponent(labelPath).
                  addComponent(textPath).
                  addComponent(buttonBrowse)).
               addGroup(centerLayout.createParallelGroup().
                  addComponent(checkLoad).addComponent(examples)));
      
      textContest.setMaximumSize(new Dimension(70,  26));
      textName.setMaximumSize(new Dimension(255,  26));
      textPath.setMaximumSize(new Dimension(330,  26));
      this.setMinimumSize(new Dimension(600, 190));
!!!166395.java!!!	actionPerformed(inout ev : ActionEvent) : void
      if(ev.getSource().equals(this.buttonOK)){

         if(!exists(textName.getText())){
				if(validate(textName.getText())){
            	result.addElement("Contest_"+textName.getText());
            	result.addElement(textPath.getText());
	            result.addElement(checkLoad.isSelected()? Boolean.TRUE:Boolean.FALSE);
   	         result.addElement(examples.isSelected()? Boolean.TRUE:Boolean.FALSE);
   	         dispose();
				} else{
					Message.printErr(this, "The name of contest must be only letter or digit");
				}			
         }else{
            Message.printErr(this, "Contest_"+textName.getText()+" folder already exists");
			}
         
      } else if(ev.getSource().equals(this.buttonBrowse)){
         JFileChooser fc = new JFileChooser();
         fc.setApproveButtonText("Open Contest");
         fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
         
         if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            textPath.setText(fc.getSelectedFile().getAbsolutePath());
         
      } else if(ev.getSource().equals(this.buttonCancel)){
         this.dispose();
      }
!!!166523.java!!!	keyTyped(inout e : KeyEvent) : void
      
!!!166651.java!!!	keyPressed(inout e : KeyEvent) : void
      if(e.getSource().equals(this.textName)){
         StringBuffer name = new StringBuffer(textName.getText());

         for(int i = name.length()-1; i >= 0; i--){
            if(!Character.isLetterOrDigit(name.charAt(i)) && name.charAt(i) != '(' && name.charAt(i)!= ')'){
               name.deleteCharAt(i);
               textName.setText(name.toString());
            }
         }
      }
!!!166907.java!!!	addEscapeKey() : void
      KeyStroke escape = KeyStroke.getKeyStroke (KeyEvent.VK_ESCAPE, 0, false);

      AbstractAction escapeAction = new AbstractAction() {
	      private static final long serialVersionUID = 8L;
         public void actionPerformed(ActionEvent e) {
            dispose();
         }
      };

      getRootPane ().getInputMap (JComponent.WHEN_IN_FOCUSED_WINDOW).put (escape, "ESCAPE");
      getRootPane ().getActionMap ().put ("ESCAPE", escapeAction);
!!!167035.java!!!	validate(in name : String) : boolean
		if(name == null || name.equalsIgnoreCase(""))
			return false;

		for(Character c: name.toCharArray()){
			if(!Character.isLetter(c) && !Character.isDigit(c) && c != '_' )
				return false;
		}
		return true;
