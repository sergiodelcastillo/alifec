class AllFilter
!!!134139.java!!!	AllFilter(in begin : String, in end : String)
		this.end = end;
		this.begin = begin;
!!!134267.java!!!	accept(inout dir : File, in name : String) : boolean
		if(name.startsWith(".")|| name.endsWith("~"))
			return false;

		if(begin.equals(""))
			return end.equals("") ? true: name.endsWith(end);
		else 
			return end.equals("") ? 
				name.startsWith(begin):
				name.startsWith(begin) && name.endsWith(end);
!!!134395.java!!!	list_file_cpp(in path : String) : Vector<String>
   
	   String [] cpp_files = new String[]{".h", ".c", ".cpp"};
   	Vector<String> names = new Vector<String>();

		for(String ext:cpp_files){
		   File [] cpp_colonies =  new File(path).listFiles(new AllFilter("", ext));
	
		   if(cpp_colonies != null) {
		   	for(File f : cpp_colonies)
					names.addElement(f.getName());
			}
		}
		return names;
!!!134523.java!!!	list_names_cpp(in path : String) : Vector<String>
	   String [] cpp_files = new String[]{".h", ".c", ".cpp"};
   	Vector<String> names = new Vector<String>();
      try {
         find :for(String ext:cpp_files){
            File [] cpp_colonies =  new File(path).listFiles(new AllFilter("", ext));

            if(cpp_colonies != null) {
               for(File f : cpp_colonies){
                  BufferedReader br = new BufferedReader(new FileReader(f));
                  String line;

                  while((line=br.readLine()) != null){
                     if(line.contains("class") && line.contains("public") && line.contains("Microorganism")){
                     	int index = line.indexOf("*/");
                     	
                        if(index >= 0 && index < line.indexOf(":"))
                           line.replace( line.substring(0, index+2), "");

                        line = line.replace("class", "").trim();
                        line = line.substring(0, line.indexOf(":"));
                        names.addElement(line);
                        continue find;
                     }
                  }
               }
            }
         }
      } catch (IOException ex){
         System.out.println("Cant load files of :" + path);
      }
		return names;
!!!134651.java!!!	list_names_java(in path : String) : Vector<String>
     	Vector<String> names = new Vector<String>();
	   File [] cpp_colonies =  new File(path).listFiles(new AllFilter("", ".java"));
	
	   if(cpp_colonies != null) {
	   	for(File f : cpp_colonies)
				names.addElement(f.getName().replace(".java", ""));
		}

		return names;
!!!134779.java!!!	get_files_java(in path : String) : Vector<File>
     	Vector<File> names = new Vector<File>();
	   File [] cpp_colonies =  new File(path).listFiles(new AllFilter("", ".java"));
	
	   if(cpp_colonies != null) {
	   	for(File f : cpp_colonies)
				names.addElement(f);
		}

		return names;
